# Azure DevOps Pipeline for Node.js Azure Blob Storage Uploader
# Deploys to Azure App Service

trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'your-azure-service-connection'  # Update with your service connection name
  appName: 'your-app-service-name'                    # Update with your App Service name
  resourceGroup: 'your-resource-group'                # Update with your resource group name
  nodeVersion: '20.x'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: Build
    displayName: 'Build Node.js App'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    - task: UseNode@1
      inputs:
        version: '$(nodeVersion)'
      displayName: 'Use Node.js'

    - script: |
        npm ci
      displayName: 'Install dependencies'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish artifacts'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(appName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'
            displayName: 'Deploy to Azure App Service'

          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(appName)'
              resourceGroupName: '$(resourceGroup)'
              appSettings: |
                [
                  {
                    "name": "KEY_VAULT_URL",
                    "value": "$(KEY_VAULT_URL)",
                    "slotSetting": false
                  },
                  {
                    "name": "STORAGE_ACCOUNT_NAME",
                    "value": "$(STORAGE_ACCOUNT_NAME)",
                    "slotSetting": false
                  },
                  {
                    "name": "CONTAINER_NAME",
                    "value": "$(CONTAINER_NAME)",
                    "slotSetting": false
                  },
                  {
                    "name": "STORAGE_KEY_SECRET_NAME",
                    "value": "$(STORAGE_KEY_SECRET_NAME)",
                    "slotSetting": false
                  },
                  {
                    "name": "NODE_ENV",
                    "value": "production",
                    "slotSetting": false
                  }
                ]
            displayName: 'Configure App Settings'
