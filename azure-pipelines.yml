trigger:
  - main

pool:
  name: 'flxbuilder'

variables:
  azureSubscription: 'FLX'      #
  appName: 'flxstore'           #
  resourceGroup: 'FLX-TEST'     #
  nodeVersion: '20.x'
  # -----------------------------------------------------------
  # NEW VARIABLE: Define the name of your Azure Artifacts Feed
  # -----------------------------------------------------------
  artifactFeedName: 'flx-deployment-packages'
  # Define the package name using the app name and build ID for versioning
  universalPackageName: '$(appName)' # Changed to just appName, versioning handled below

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: Build
    displayName: 'Build Node.js App'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    - task: UseNode@1
      inputs:
        version: '$(nodeVersion)'
      displayName: 'Use Node.js'

    - script: |
        npm ci
      displayName: 'Install dependencies'

    # Step that creates the final deployment artifact (.zip)
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        # Archive file path is used for both publishing tasks
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive files'

    # -----------------------------------------------------------
    # NEW STEP: Publish the ZIP as a Universal Package to Azure Artifacts
    # FIX: Using the project scope/feed name format for publishFeed 
    # to ensure the feed ID is found. Also ensuring the package name is simple.
    # -----------------------------------------------------------
    - task: UniversalPackages@0
      displayName: 'Publish Deployment Package to Artifacts Feed'
      inputs:
        command: 'publish'
        # FIX: Explicitly specify the feed using the Project name and Feed name.
        # Assuming your project name is 'flxblobstore' (from previous context).
        publishFeed: '$(System.TeamProject)/$(artifactFeedName)'
        # Using the simplified package name
        packageName: '$(appName)'
        # Path to the directory containing the files to publish
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        # The version number uses the pipeline run ID
        version: '$(Build.BuildId)'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          # Optional: If you prefer to download the package from the feed 
          # instead of referencing the pipeline artifact (more consistent CD model)
          # - task: UniversalPackages@0
          #   displayName: 'Download Package from Feed'
          #   inputs:
          #     command: 'download'
          #     downloadFeed: '$(artifactFeedName)'
          #     packageName: '$(universalPackageName)'
          #     version: '$(Build.BuildId)'
          #     downloadPath: '$(Pipeline.Workspace)/feed_download'

          # The current deployment task relies on the old artifact path.
          # We'll keep the standard deployment approach for simplicity, but 
          # note that the package is now also in the Artifacts feed.
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(appName)'
              # This path refers to the artifact published via PublishBuildArtifacts@1, 
              # which we effectively replaced above. For this to work with the 
              # UniversalPackages push, you should revert to PublishPipelineArtifact@1 
              # and add the UniversalPackages@0 task in parallel, OR 
              # download the universal package first.
              # I am reverting to the recommended PublishPipelineArtifact for the deployment chain 
              # while adding the Universal Package push for the repository feature you requested.
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'
            displayName: 'Deploy to Azure App Service'

          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(appName)'
              resourceGroupName: '$(resourceGroup)'
              appSettings: |
                [
                  {
                    "name": "KEY_VAULT_URL",
                    "value": "@Microsoft.KeyVault(SecretUri=https://flxlock.vault.azure.net/secrets/KEY-VAULT-URL/)",
                    "slotSetting": false
                  },
                  {
                    "name": "STORAGE_ACCOUNT_NAME",
                    "value": "@Microsoft.KeyVault(SecretUri=https://flxlock.vault.azure.net/secrets/STORAGE-ACCOUNT-NAME/)",
                    "slotSetting": false
                  },
                  {
                    "name": "CONTAINER_NAME",
                    "value": "@Microsoft.KeyVault(SecretUri=https://flxlock.vault.azure.net/secrets/CONTAINER-NAME/)",
                    "slotSetting": false
                  },
                  {
                    "name": "STORAGE_ACCOUNT_KEY",
                    "value": "@Microsoft.KeyVault(SecretUri=https://flxlock.vault.azure.net/secrets/STORAGE-ACCOUNT-KEY/)",
                    "slotSetting": false
                  },
                  {
                    "name": "STORAGE_KEY_SECRET_NAME",
                    "value": "@Microsoft.KeyVault(SecretUri=https://flxlock.vault.azure.net/secrets/STORAGE-KEY-SECRET-NAME/)",
                    "slotSetting": false
                  },
                  {
                    "name": "NODE_ENV",
                    "value": "production",
                    "slotSetting": false
                  },
                  {
                    "name": "PORT",
                    "value": "8080",
                    "slotSetting": false
                  }
                ]
            displayName: 'Configure App Settings'
